{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","components/services/person.js","components/Success.js","components/Error.js","App.jsx","index.js"],"names":["Filter","searchValue","searchHandler","value","onChange","PersonForm","newName","newNameHandler","newNumber","newNumberHandler","clickHandler","onClick","Persons","persons","deleteHandler","filter","person","name","toLowerCase","includes","map","i","number","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Success","successMessage","className","Error","errorMessage","App","useState","setPersons","setNewName","setNewNumber","setSearchValue","setSuccessMessage","setErrorMessage","useEffect","personService","initialValues","e","target","preventDefault","personObject","existingPerson","find","p","updatedPerson","confirm","returnedValues","catch","error","console","log","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecb2a034.chunk.js","sourcesContent":["const Filter = ({ searchValue, searchHandler }) => {\r\n  return (\r\n    <div>\r\n      filter shown with: <input value={searchValue} onChange={searchHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const PersonForm = ({\r\n  newName,\r\n  newNameHandler,\r\n  newNumber,\r\n  newNumberHandler,\r\n  clickHandler\r\n}) => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input onChange={newNameHandler} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={newNumberHandler} value={newNumber} />\r\n      </div>\r\n      <div>\r\n        <button onClick={clickHandler}>add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const Persons = ({ persons, searchValue, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      {persons\r\n        .filter((person) => {\r\n          return person.name.toLowerCase().includes(searchValue.toLowerCase())\r\n        })\r\n        .map((person, i) => (\r\n          <div key={i}>\r\n            {person.name} {person.number}{\" \"}\r\n            <button onClick={() => deleteHandler(person.id, person.name)}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst remove = (id, newObject) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n","const Success = ({ successMessage }) => {\r\n  if (successMessage === null) {\r\n    return null\r\n  }\r\n  return <div className=\"success\">{successMessage}</div>\r\n}\r\n\r\nexport default Success\r\n","const Error = ({ errorMessage }) => {\r\n  if (errorMessage === null) {\r\n    return null\r\n  }\r\n  return <div className=\"error\">{errorMessage}</div>\r\n}\r\n\r\nexport default Error\r\n","import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport Filter from \"./components/Filter\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport personService from \"./components/services/person\"\nimport Success from \"./components/Success\"\nimport Error from \"./components/Error\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [searchValue, setSearchValue] = useState(\"\")\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((initialValues) => setPersons(initialValues))\n  }, [])\n\n  const newNameHandler = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const newNumberHandler = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const searchHandler = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n  const onDeleteHandler = (id, name) => {\n    console.log(name, id)\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    {\n      confirm(`Delete ${name} ?`) &&\n        personService.remove(id, personObject).catch((error) => {\n          setErrorMessage(\n            `Information of \"${name}\" has already been removed from the server`\n          )\n          setTimeout(() => setErrorMessage(null), 5000)\n          console.log(error)\n        })\n    }\n  }\n\n  const clickHandler = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const existingPerson = persons.find((p) => p.name === newName)\n    const updatedPerson = { ...existingPerson, number: newNumber }\n\n    if (existingPerson) {\n      {\n        confirm(\n          `${newName} is already added to phonebook, replace the old number with new one?`\n        ) &&\n          personService\n            .update(existingPerson.id, updatedPerson)\n            .then((returnedValues) => {\n              setPersons(\n                persons.map((person) =>\n                  person.id !== existingPerson.id ? person : returnedValues\n                )\n              )\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then((returnedValues) => {\n          console.log(returnedValues)\n          setPersons([...persons, returnedValues])\n          setSuccessMessage(`Added ${returnedValues.name}`)\n          setTimeout(() => setSuccessMessage(null), 5000)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Success successMessage={successMessage} />\n      <Error errorMessage={errorMessage} />\n      <Filter searchValue={searchValue} searchHandler={searchHandler} />\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNameHandler={newNameHandler}\n        newNumber={newNumber}\n        newNumberHandler={newNumberHandler}\n        clickHandler={clickHandler}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        searchValue={searchValue}\n        deleteHandler={onDeleteHandler}\n      />\n    </div>\n  )\n}\nexport default App\n","import ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./styles.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}